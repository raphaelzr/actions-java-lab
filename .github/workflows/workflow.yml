# The name of the workflow.
name: Java CI

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

  analyze:
    name: Analyze
    
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java-kotlin' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
        queries: security-extended,security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  stackhawk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for stackhawk/hawkscan-action to upload code scanning alert info
    name: StackHawk
    runs-on: ubuntu-20.04
    needs: build  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package

      - name: Start your service
        run: java -jar actions-java-lab-1.0-SNAPSHOT-jar-with-dependencies.jar &

      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@4c3258cd62248dac6d9fe91dd8d45928c697dee0
        continue-on-error: true                   # ✏️ Set to false to break your build on scan errors
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
          codeScanningAlerts: true
          githubToken: ${{ github.token }}

  deploy:

    runs-on: ubuntu-latest
    needs: stackhawk

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package

      - name: Set up SSH
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 172.191.45.143 >> ~/.ssh/known_hosts
      - name: Deploy to server
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          scp -i ~/.ssh/id_rsa -r ./* azureadmin@172.191.45.143:/app/data/

      - name: Start Java Application
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          ssh -i ~/.ssh/id_rsa azureadmin@172.191.45.143 'java -jar /app/data/actions-java-lab-1.0-SNAPSHOT-jar-with-dependencies.jar'
          
